<ui:DialogWindow x:Class="ArtemisPluginTemplates.PluginTypes.LayerBrush.LayerBrushInfoDialog"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:ui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 Title="Artemis Plugin Customization Wizard" Height="500" Width="700" ResizeMode="NoResize"
                 Loaded="Window_Loaded" TextOptions.TextFormattingMode="Display">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="75*" />
            <RowDefinition Height="364*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="60*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Name="headingGrid" Background="White">
            <Label Grid.Row="0"
                   Content="Enter layer brush information"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Margin="18,0,0,0"
                   FontWeight="ExtraBold" />
        </Grid>
        <Grid Grid.Row="1" Name="mainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="400*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,15,15,0" TextWrapping="Wrap">
                Enter some information about your layer brush below. This affects the code that is generated in your project, but you can always manually change things later.
            </TextBlock>

            <Label Grid.Row="1" Grid.Column="1" Margin="0,15,0,0" Content="_Display name*:" FontWeight="Bold" Target="{Binding ElementName=NameTextBox}" />
            <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Margin="0,15,0,0" Height="23" Name="NameTextBox" Width="410" Text="" />
            <Label Grid.Row="2" Grid.Column="1" Margin="0,15,0,0" Content="Description*:" FontWeight="Bold" Target="{Binding ElementName=NameTextBox}" />
            <TextBox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" Margin="0,15,0,0" Height="23" Name="DescriptionTextBox" Width="410" Text="" />
            <Label Grid.Row="3" Grid.Column="1" Margin="0,15,0,0" Content="_Brush icon*:" FontWeight="Bold" Target="{Binding ElementName=DescriptionTextBox}" />
            <StackPanel Grid.Row="3" Grid.Column="2" Margin="0,15,0,0">
                <TextBox HorizontalAlignment="Left" Height="23" Name="IconTextBox" Width="410" Text="" />
                <TextBlock Margin="0 5 0 0">
                    Use CamelCasing, for available icons see
                    <Hyperlink NavigateUri="https://materialdesignicons.com/" Click="Hyperlink_OnClick">
                        https://materialdesignicons.com/
                    </Hyperlink>
                </TextBlock>
            </StackPanel>

            <StackPanel Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Vertical">
                <Label Margin="0,10,0,0"
                       Content="Brush render type:"
                       FontWeight="Bold"
                       ToolTip="The render type defines what kind of layer you'll be implementing, each layer type has its own pros and cons" />
                <RadioButton Content="_Regular"
                             Margin="5,0,0,0"
                             Name="RenderTypeRegular"
                             IsChecked="True" ToolTip="A normal brush that renders pixels on the canvas" />
                <RadioButton Content="_Per LED"
                             Margin="5,5,0,0"
                             Name="RenderTypePerLed"
                             ToolTip="A brush that does not render pixels but gives each LED a specific color" />
                <RadioButton Content="_RGB.NET"
                             Margin="5,5,0,0"
                             Name="RenderTypeRgbNet"
                             ToolTip="An RGB.NET-based brush that interacts directly with RGB.NET" />
                <TextBlock TextWrapping="Wrap" Foreground="DarkRed" Margin="5 0">
                    Warning: RGB.NET-based brushes do not support transformations and layer effects and always render on top of other layer types.
                </TextBlock>
            </StackPanel>

            <CheckBox Grid.Row="5"
                      Grid.Column="1"
                      Grid.ColumnSpan="2"
                      Name="IncludeDialogCheckBox"
                      Margin="4,10,0,0"
                      Content="Include custom properties dialog"
                      ToolTip="If checked, a settings button appears behind your effect in the UI where you can have extra options complementing the regular properties" IsThreeState="True" />

        </Grid>
        <Rectangle Grid.Row="2" Name="SeparatorRectangle" Fill="White" />
        <StackPanel Grid.Row="3" Name="NavigationPanel" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10 0">
            <Button Content="_Previous" Margin="5 0" Height="25" Name="PreviousButton" Width="85" Click="PreviousButton_Click" />
            <Button Content="_Finish" Margin="5 0" Height="25" Name="FinishButton" Width="85" Click="FinishButton_Click" IsDefault="True" />
        </StackPanel>
    </Grid>
</ui:DialogWindow>