<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <ShouldIncludeNativeSkiaSharp>false</ShouldIncludeNativeSkiaSharp>
    <AssemblyName>$safeprojectname$</AssemblyName>
    <RootNamespace>$safeprojectname$</RootNamespace>
	<UseWPF>true</UseWPF>
	<Platforms>x64</Platforms>
	<GenerateDependencyFile>False</GenerateDependencyFile>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>
 
  <ItemGroup>
    <PackageReference Include="MaterialDesignExtensions" Version="$MaterialDesignExtensionsVersion$" PrivateAssets="All" />
    <PackageReference Include="MaterialDesignThemes" Version="$MaterialDesignThemesVersion$" PrivateAssets="All" />
    <PackageReference Include="FluentValidation" Version="$FluentValidationVersion$" PrivateAssets="All" />
    <PackageReference Include="SkiaSharp" Version="$SkiaSharpVersion$" PrivateAssets="All" />
    <PackageReference Include="Stylet" Version="$StyletVersion$" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Page Include="Properties\DesignTimeResources.xaml" Condition="'$(DesignTime)'=='true' OR ('$(SolutionPath)'!='' AND Exists('$(SolutionPath)') AND '$(BuildingInsideVisualStudio)'!='true' AND '$(BuildingInsideExpressionBlend)'!='true')">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
      <ContainsDesignTimeResources>true</ContainsDesignTimeResources>
    </Page>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Artemis.Core">
      <HintPath>$ArtemisDirectory$\Artemis.Core.dll</HintPath>
	  <Private>false</Private>
    </Reference>
    <Reference Include="Artemis.UI.Shared">
      <HintPath>$ArtemisDirectory$\Artemis.UI.Shared.dll</HintPath>
	  <Private>false</Private>
    </Reference>
	<!-- TODO: Replace with PackageReferences when moving to Nuget -->
	$if$ ($LayerBrushRenderType$ == RgbNet)
	<Reference Include="RGB.NET.Core">
      <HintPath>$ArtemisDirectory$\RGB.NET.Core.dll</HintPath>
	  <Private>false</Private>
    </Reference>   
	<Reference Include="RGB.NET.Brushes">
      <HintPath>$ArtemisDirectory$\RGB.NET.Brushes.dll</HintPath>
	  <Private>false</Private>
    </Reference>
	$endif$
  </ItemGroup>

  <ItemGroup>
    <None Update="plugin.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <!-- This may trigger another build (something related to the obj folder) so only run it if building inside VS -->
	<Target Name="PostBuildPublish" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
		<Message Text="------ Artemis plugin publish ------" Importance="High" />
		<Exec Command="dotnet publish --verbosity q --output &quot;%25ProgramData%25\Artemis\Plugins\$(ProjectName)&quot;" />
		<Message Text="Published $(ProjectName) at file:\\$(ProgramData)\Artemis\Plugins\$(ProjectName)" Importance="High" />
		<Message Text="If distributing outside the workshop, share this folder." Importance="High" />
	</Target>

	<!-- Override the published DLLs with the built DLLs to enable edit & continue -->
	<Target Name="PostBuildLocalDlls" AfterTargets="PostBuildEvent" Condition="'$(BuildingInsideVisualStudio)' == 'true'">
		<ItemGroup>
			<DllFiles Include="$(TargetDir)\**\*.dll" />
		</ItemGroup>
		<Copy SourceFiles="@(DllFiles)" DestinationFolder="$(ProgramData)\Artemis\Plugins\$(ProjectName)" />
	</Target>
</Project>